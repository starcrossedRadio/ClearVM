#[derive(Copy, Clone, Debug, PartialEq)]
pub enum OpCode{
    Halt,
    Add,
    Sub,
    Mult,
    Div,
    Xor,
    Or,
    And,
    Shl,
    Shr,
    Mov,
    MovImediate,
    Push,
    PushImediate,
    Pop,
    LoadMemory,
    LoadMemoryImediate,
    LoadData,
    LoadDataImediate,
    LoadOffset,
    Jmp,
    Cmp,
    Call,
    Return,
    CallExtern,
    Bif,
    Spawn,
    Receive,
    Send,
    Unrecognized
}

impl From<OpCode> for u8 {
    fn from(op: OpCode) -> Self {
        match op {
            OpCode::Halt => 0,
            OpCode::Add => 1,
            OpCode::Sub => 2,
            OpCode::Mult => 3,
            OpCode::Div => 4,
            OpCode::Xor => 5,
            OpCode::Or => 6,
            OpCode::And => 7,
            OpCode::Shl => 8,
            OpCode::Shr => 9,
            OpCode::Mov => 10,
            OpCode::MovImediate => 11,
            OpCode::Push => 12,
            OpCode::PushImediate => 13,
            OpCode::Pop => 14,
            OpCode::LoadMemory => 15,
            OpCode::LoadMemoryImediate => 16,
            OpCode::LoadData => 17,
            OpCode::LoadDataImediate => 18,
            OpCode::LoadOffset => 19,
            OpCode::Jmp => 20,
            OpCode::Cmp => 21,
            OpCode::Call => 22,
            OpCode::Return => 23,
            OpCode::CallExtern => 24,
            OpCode::Bif => 25,
            OpCode::Spawn => 26,
            OpCode::Receive => 27,
            OpCode::Send => 28,
            OpCode::Unrecognized => 255,
        }
    }
}

impl From<u8> for OpCode {
    fn from(number: u8) -> Self {
        match number {
            0 => OpCode::Halt,
            1 => OpCode::Add,
            2 => OpCode::Sub,
            3 => OpCode::Mult,
            4 => OpCode::Div,
            5 => OpCode::Xor,
            6 => OpCode::Or,
            7 => OpCode::And,
            8 => OpCode::Shl,
            9 => OpCode::Shr,
            10 => OpCode::Mov,
            11 => OpCode::MovImediate,
            12 => OpCode::Push,
            13 => OpCode::PushImediate,
            14 => OpCode::Pop,
            15 => OpCode::LoadMemory,
            16 => OpCode::LoadMemoryImediate,
            17 => OpCode::LoadData,
            18 => OpCode::LoadDataImediate,
            19 => OpCode::LoadOffset,
            20 => OpCode::Jmp,
            21 => OpCode::Cmp,
            22 => OpCode::Call,
            23 => OpCode::Return,
            24 => OpCode::CallExtern,
            25 => OpCode::Bif,
            26 => OpCode::Spawn,
            27 => OpCode::Receive,
            28 => OpCode::Send,
            _ => OpCode::Unrecognized
        }
    }
}